local SocialTab = script:FindFirstAncestor("SocialTab")
local dependencies = require(SocialTab.dependencies)

local Roact = dependencies.Roact
local UIBlox = dependencies.UIBlox
local t = dependencies.t
local memoize = dependencies.memoize

local UserUtils = require(SocialTab.User)
local FreeFlowCarousel = UIBlox.App.Container.Carousel.FreeFlowCarousel

local GAME_CAROUSEL_SIDE_COMPACT_PADDING = 24
local GAME_CAROUSEL_SIDE_WIDE_PADDING = 48
-- This is so the header for the carousel is covered up by the `UserCarouselHeader` we've built.
-- TODO remove when icons are allowed on UIBLox carousel or title is optional.
local GAME_NAME_OFFSET = 18
local AddFriendHint = require(script.Parent.AddFriendHint)
local UIBLOX_CAROUSEL_HEADER_HEIGHT = 38

local UIBloxCarouselAdaptor = Roact.PureComponent:extend("UIBloxCarouselAdaptor")

UIBloxCarouselAdaptor.defaultProps = {
	friends = {},
	friendThumbnailSize = 96,
	LayoutOrder = 0,
	wideMode = false,
	tileHeight = 96,
}

UIBloxCarouselAdaptor.validateProps = t.interface({
	createUserEntry = t.callback,
	friends = t.array(UserUtils.validateUser),
	friendThumbnailSize = t.optional(t.number),
	LayoutOrder = t.optional(t.number),
	onFriendSelected = t.optional(t.callback),
	wideMode = t.optional(t.boolean),
})

function UIBloxCarouselAdaptor:init()
	self.identifier = function(user)
		return user.absolutePosition
	end

	self.createUserEntry = function(entry)
		if entry.absolutePosition == 2 and entry.addFriendHint then
			return Roact.createElement(AddFriendHint, {
				layoutOrder = 2,
				maxHintHeight = self.props.friendThumbnailSize,
			})
		end
		if entry.absolutePosition > 0 and entry.isPlaceHolder == true then
			return Roact.createElement("Frame", {
				BackgroundTransparency = 1,
				Size = UDim2.new(0, self.props.friendThumbnailSize, 1, 0),
			})
		end

		return self.props.createUserEntry(entry)
	end

	self.formatFriends = memoize(function(friends)
		local usersEntries = {}
		table.insert(usersEntries, {
			absolutePosition = 1,
		})
		if #friends == 0 then
			table.insert(usersEntries, {
				absolutePosition = 2,
				addFriendHint = true,
			})
		end
		for i, user in ipairs(friends) do
			table.insert(usersEntries, {
				layoutOrder = i + 1,
				absolutePosition = i + 1,
				user = user,
			})
		end

		return usersEntries
	end)
end

-- ??? NOTE if this gets used beyond DUAR, the alignment of the tiles on scrolling manually is not perfect. May need updates.
function UIBloxCarouselAdaptor:render()
	local sideMargin = self.props.wideMode and GAME_CAROUSEL_SIDE_WIDE_PADDING or GAME_CAROUSEL_SIDE_COMPACT_PADDING

	return Roact.createElement("Frame", {
		LayoutOrder = self.props.LayoutOrder,
		BackgroundTransparency = 1,
		Size = UDim2.new(1, sideMargin, 0, self.props.tileHeight + GAME_NAME_OFFSET),
	}, {
		Padding = Roact.createElement("UIPadding", {
			PaddingLeft = UDim.new(0, -sideMargin),
			--* we use custom header for carousel instead of one provided by FreeFlowCarousel
			--* this is to hide empty space generated by FreeFlowCarousel header
			PaddingTop = UDim.new(0, -UIBLOX_CAROUSEL_HEADER_HEIGHT),
		}),
		CarouselContent = Roact.createElement(FreeFlowCarousel, {
			identifier = self.identifier,
			itemList = self.formatFriends(self.props.friends),
			renderItem = self.createUserEntry,
			itemSize = Vector2.new(self.props.friendThumbnailSize, self.props.tileHeight + GAME_NAME_OFFSET),
			carouselMargin = sideMargin,
		}),
	})
end

return UIBloxCarouselAdaptor
